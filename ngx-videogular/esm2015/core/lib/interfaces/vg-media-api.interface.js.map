{"version":3,"file":"vg-media-api.interface.js","sourceRoot":"","sources":["../../../../../../../libs/ngx-videogular/core/src/lib/interfaces/vg-media-api.interface.ts"],"names":[],"mappings":"","sourcesContent":["import {Observable, Subject} from 'rxjs';\n\n// TODO: Come up with a better name for this file.\n\nexport interface IPlayable {\n  id: string;\n  elem: any;\n  time: any;\n  buffer: any;\n  track?: any;\n  canPlay: boolean;\n  canPlayThrough: boolean;\n  isMetadataLoaded: boolean;\n  isWaiting: boolean;\n  isCompleted: boolean;\n  isLive: boolean;\n  textTracks: TextTrackList;\n  state: string;\n  subscriptions: IMediaSubscriptions;\n  duration: number;\n  currentTime: number;\n\n  // tslint:disable: ban-types\n  play: Function;\n  pause: Function;\n  addTextTrack?: Function;\n  dispatchEvent?: Function;\n}\n\nexport interface IMediaSubscriptions {\n  abort: Observable<any>;\n  bufferDetected: Subject<boolean>;\n  canPlay: Observable<any>;\n  canPlayThrough: Observable<any>;\n  durationChange: Observable<any>;\n  emptied: Observable<any>;\n  encrypted: Observable<any>;\n  ended: Observable<any>;\n  error: Observable<any>;\n  loadedData: Observable<any>;\n  loadedMetadata: Observable<any>;\n  loadStart: Observable<any>;\n  pause: Observable<any>;\n  play: Observable<any>;\n  playing: Observable<any>;\n  progress: Observable<any>;\n  rateChange: Observable<any>;\n  seeked: Observable<any>;\n  seeking: Observable<any>;\n  stalled: Observable<any>;\n  suspend: Observable<any>;\n  timeUpdate: Observable<any>;\n  volumeChange: Observable<any>;\n  waiting: Observable<any>;\n\n  // to observe the ads\n  startAds: Observable<any>;\n  endAds: Observable<any>;\n}\n"]}