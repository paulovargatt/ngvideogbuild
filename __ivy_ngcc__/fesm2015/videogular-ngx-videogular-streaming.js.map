{"version":3,"file":"videogular-ngx-videogular-streaming.js","sources":["../../../../libs/ngx-videogular/streaming/src/lib/directives/vg-dash/vg-dash.directive.ts","../../../../libs/ngx-videogular/streaming/src/lib/directives/vg-hls/vg-hls.directive.ts","../../../../libs/ngx-videogular/streaming/src/lib/streaming.module.ts","../../../../libs/ngx-videogular/streaming/src/videogular-ngx-videogular-streaming.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Directive,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {\n  IDRMLicenseServer,\n  BitrateOptions,\n  VgApiService,\n} from '@videogular/ngx-videogular/core';\n\ndeclare let dashjs: {\n  MediaPlayer: {\n    (): { (): any; new (): any; create: { (): any; new (): any } };\n    events: { STREAM_INITIALIZED: any };\n  };\n  Debug: { LOG_LEVEL_NONE: any };\n};\n\n@Directive({\n  selector: '[vgDash]',\n  exportAs: 'vgDash',\n})\nexport class VgDashDirective implements OnInit, OnChanges, OnDestroy {\n  @Input() vgDash: string;\n  @Input() vgDRMToken: string;\n  @Input() vgDRMLicenseServer: IDRMLicenseServer;\n\n  @Output() onGetBitrates: EventEmitter<BitrateOptions[]> = new EventEmitter();\n\n  vgFor: string;\n  target: any;\n  dash: any;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(private ref: ElementRef, public API: VgApiService) {}\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.vgFor = this.ref.nativeElement.getAttribute('vgFor');\n    this.target = this.API.getMediaById(this.vgFor);\n    this.createPlayer();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    changes.vgDash?.currentValue ? this.createPlayer() : this.destroyPlayer();\n  }\n\n  createPlayer() {\n    if (this.dash) {\n      this.destroyPlayer();\n    }\n\n    // It's a DASH source\n    if (\n      this.vgDash &&\n      (this.vgDash.indexOf('.mpd') > -1 ||\n        this.vgDash.indexOf('mpd-time-csf') > -1)\n    ) {\n      let drmOptions: any;\n\n      if (this.vgDRMLicenseServer) {\n        drmOptions = this.vgDRMLicenseServer;\n\n        if (this.vgDRMToken) {\n          for (const drmServer in drmOptions) {\n            if (drmServer.hasOwnProperty(drmServer)) {\n              drmOptions[drmServer].httpRequestHeaders = {\n                Authorization: this.vgDRMToken,\n              };\n            }\n          }\n        }\n      }\n\n      this.dash = dashjs.MediaPlayer().create();\n      this.dash.updateSettings({debug: {logLevel: dashjs.Debug.LOG_LEVEL_NONE}});\n      this.dash.initialize(this.ref.nativeElement);\n      this.dash.setAutoPlay(false);\n\n      this.dash.on(dashjs.MediaPlayer.events.STREAM_INITIALIZED, () => {\n        const audioList = this.dash.getBitrateInfoListFor('audio');\n        const videoList = this.dash.getBitrateInfoListFor('video');\n\n        if (audioList.length > 1) {\n          audioList.forEach(\n            (item: { qualityIndex: number }) =>\n              (item.qualityIndex = ++item.qualityIndex)\n          );\n          audioList.unshift({\n            qualityIndex: 0,\n            width: 0,\n            height: 0,\n            bitrate: 0,\n            mediaType: 'video',\n            scanType: 'AUTO',\n          });\n\n          this.onGetBitrates.emit(audioList);\n        }\n\n        if (videoList.length > 1) {\n          videoList.forEach(\n            (item: {qualityIndex: number}) => (\n              item.qualityIndex = ++item.qualityIndex\n            )\n          );\n          videoList.unshift({\n            qualityIndex: 0,\n            width: 0,\n            height: 0,\n            bitrate: 0,\n            mediaType: 'video',\n            scanType: 'AUTO',\n          });\n\n          this.onGetBitrates.emit(videoList);\n        }\n      });\n\n      if (drmOptions) {\n        this.dash.setProtectionData(drmOptions);\n      }\n\n      this.dash.attachSource(this.vgDash);\n    } else {\n      if (this.target) {\n        this.target.pause();\n        this.target.seekTime(0);\n        this.ref.nativeElement.src = this.vgDash;\n      }\n    }\n  }\n\n  setBitrate({mediaType, qualityIndex}: BitrateOptions) {\n    if (this.dash) {\n      if (qualityIndex > 0) {\n        if (this.dash.getSettings()) {\n          this.dash.updateSettings({\n            streaming: {\n              abr: {\n                autoSwitchBitrate: {\n                  [mediaType]: false\n                }\n              }\n            }\n          });\n        }\n\n        const nextIndex = qualityIndex - 1;\n        this.dash.setQualityFor(mediaType, nextIndex);\n      } else {\n        this.dash.updateSettings({\n          streaming: {\n            abr: {\n              autoSwitchBitrate: {\n                [mediaType]: true\n              }\n            }\n          }\n        });\n      }\n    }\n  }\n\n  destroyPlayer() {\n    if (this.dash) {\n      this.dash.reset();\n      this.dash = null;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n    this.destroyPlayer();\n  }\n}\n","import {\n  Directive,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {\n  IHLSConfig,\n  BitrateOptions,\n  VgApiService,\n} from '@videogular/ngx-videogular/core';\n\ndeclare let Hls: {\n  new (arg0: IHLSConfig): any;\n  isSupported: () => any;\n  Events: { MANIFEST_PARSED: any; LEVEL_LOADED: any };\n};\n\n@Directive({\n  selector: '[vgHls]',\n  exportAs: 'vgHls',\n})\nexport class VgHlsDirective implements OnInit, OnChanges, OnDestroy {\n  @Input() vgHls: string;\n  @Input() vgHlsHeaders: { [key: string]: string } = {};\n\n  @Output() onGetBitrates: EventEmitter<BitrateOptions[]> = new EventEmitter();\n\n  vgFor: string;\n  target: any;\n  hls: any;\n  preload: boolean;\n  crossorigin: string;\n  config: IHLSConfig;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(private ref: ElementRef, public API: VgApiService) {}\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.crossorigin = this.ref.nativeElement.getAttribute('crossorigin');\n    this.preload = this.ref.nativeElement.getAttribute('preload') !== 'none';\n    this.vgFor = this.ref.nativeElement.getAttribute('vgFor');\n\n    if (this.vgFor) {\n      this.target = this.API.getMediaById(this.vgFor);\n    } else {\n      this.target = this.API.getDefaultMedia();\n    }\n\n    this.config = {\n      autoStartLoad: this.preload,\n    } as IHLSConfig;\n    // @ts-ignore\n    this.config.xhrSetup = (xhr: {\n      withCredentials: boolean;\n      setRequestHeader: (arg0: string, arg1: string) => void;\n    }) => {\n      // Send cookies\n      if (this.crossorigin === 'use-credentials') {\n        xhr.withCredentials = true;\n      }\n      for (const key of Object.keys(this.vgHlsHeaders)) {\n        xhr.setRequestHeader(key, this.vgHlsHeaders[key]);\n      }\n    };\n\n    this.createPlayer();\n\n    if (!this.preload) {\n      this.subscriptions.push(\n        this.API.subscriptions.play.subscribe(() => {\n          if (this.hls) {\n            this.hls.startLoad(0);\n          }\n        })\n      );\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.vgHls?.currentValue) {\n      this.createPlayer();\n    } else if (changes.vgHlsHeaders && changes.vgHlsHeaders.currentValue) {\n      // Do nothing. We don't want to create a or destroy a player if the headers change.\n    } else {\n      this.destroyPlayer();\n    }\n  }\n\n  createPlayer() {\n    if (this.hls) {\n      this.destroyPlayer();\n    }\n\n    // It's a HLS source\n    if (\n      this.vgHls &&\n      this.vgHls.indexOf('m3u8') > -1 &&\n      Hls.isSupported() &&\n      this.API.isPlayerReady\n    ) {\n      const video: HTMLVideoElement = this.ref.nativeElement;\n\n      this.hls = new Hls(this.config);\n      // @ts-ignore\n      this.hls.on(\n        Hls.Events.MANIFEST_PARSED,\n        (_event: any, data: { levels: any[] }) => {\n          const videoList = [];\n\n          videoList.push({\n            qualityIndex: 0,\n            width: 0,\n            height: 0,\n            bitrate: 0,\n            mediaType: 'video',\n            label: 'AUTO',\n          });\n\n          data.levels.forEach(\n            (\n              item: { width: any; height: any; bitrate: any; name: any },\n              index: number\n            ) => {\n              videoList.push({\n                qualityIndex: ++index,\n                width: item.width,\n                height: item.height,\n                bitrate: item.bitrate,\n                mediaType: 'video',\n                label: item.name,\n              });\n            }\n          );\n\n          this.onGetBitrates.emit(videoList);\n        }\n      );\n      // @ts-ignore\n      this.hls.on(\n        Hls.Events.LEVEL_LOADED,\n        (_event: any, data: { details: { live: any } }) => {\n          this.target.isLive = data.details.live;\n        }\n      );\n\n      this.hls.loadSource(this.vgHls);\n      this.hls.attachMedia(video);\n    } else {\n      if (this.target && !!this.target.pause) {\n        this.target.pause();\n        this.target.seekTime(0);\n        this.ref.nativeElement.src = this.vgHls;\n      }\n    }\n  }\n\n  setBitrate(bitrate: BitrateOptions) {\n    if (this.hls) {\n      this.hls.nextLevel = bitrate.qualityIndex - 1;\n    }\n  }\n\n  destroyPlayer() {\n    if (this.hls) {\n      this.hls.destroy();\n      this.hls = null;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n    this.destroyPlayer();\n    delete this.hls;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VgDashDirective } from './directives/vg-dash/vg-dash.directive';\nimport { VgHlsDirective } from './directives/vg-hls/vg-hls.directive';\nimport { VgCoreModule } from '@videogular/ngx-videogular/core';\n\n@NgModule({\n  imports: [CommonModule, VgCoreModule],\n  declarations: [VgDashDirective, VgHlsDirective],\n  exports: [VgDashDirective, VgHlsDirective]\n})\nexport class VgStreamingModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}