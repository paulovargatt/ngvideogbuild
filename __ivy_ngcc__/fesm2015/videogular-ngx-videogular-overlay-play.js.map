{"version":3,"file":"videogular-ngx-videogular-overlay-play.js","sources":["../../../../libs/ngx-videogular/overlay-play/src/lib/vg-overlay-play.component.ts","../../../../libs/ngx-videogular/overlay-play/src/lib/overlay-play.module.ts","../../../../libs/ngx-videogular/overlay-play/src/videogular-ngx-videogular-overlay-play.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  OnInit,\n  Input,\n  ElementRef,\n  HostListener,\n  ViewEncapsulation,\n  OnDestroy,\n  HostBinding,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { VgApiService, VgFullscreenApiService, VgControlsHiddenService, VgStates } from '@videogular/ngx-videogular/core';\n\n@Component({\n  selector: 'vg-overlay-play',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div\n    class=\"vg-overlay-play\"\n    [class.native-fullscreen]=\"isNativeFullscreen\"\n    [class.controls-hidden]=\"areControlsHidden\"\n  >\n    <div\n      class=\"overlay-play-container\"\n      [class.vg-icon-play_arrow]=\"getState() !== 'playing'\"\n    ></div>\n  </div>`,\n  styles: [\n    `\n      vg-overlay-play {\n        z-index: 200;\n      }\n      vg-overlay-play.is-buffering {\n        display: none;\n      }\n      vg-overlay-play .vg-overlay-play {\n        transition: all 0.5s;\n        cursor: pointer;\n        position: absolute;\n        display: block;\n        color: white;\n        width: 100%;\n        height: 100%;\n        font-size: 80px;\n        filter: alpha(opacity=60);\n        opacity: 0.6;\n      }\n      vg-overlay-play .vg-overlay-play.native-fullscreen.controls-hidden {\n        cursor: none;\n      }\n      vg-overlay-play\n        .vg-overlay-play\n        .overlay-play-container.vg-icon-play_arrow {\n        pointer-events: none;\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-size: 80px;\n      }\n      vg-overlay-play .vg-overlay-play:hover {\n        filter: alpha(opacity=100);\n        opacity: 1;\n      }\n      vg-overlay-play\n        .vg-overlay-play:hover\n        .overlay-play-container.vg-icon-play_arrow:before {\n        transform: scale(1.2);\n      }\n    `,\n  ],\n})\nexport class VgOverlayPlayComponent implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  @Input() vgSkipIfControlsHidden = false;\n  @Input() vgSkipIfControlsHiddenDelay = 0.5;\n  elem: HTMLElement;\n  target: any;\n\n  isNativeFullscreen = false;\n  areControlsHidden = false;\n  areControlsHiddenChangeTime: number = 0;\n\n  subscriptions: Subscription[] = [];\n\n  @HostBinding('class.is-buffering') isBuffering = false;\n\n  constructor(\n    ref: ElementRef,\n    public API: VgApiService,\n    public fsAPI: VgFullscreenApiService,\n    private controlsHidden: VgControlsHiddenService\n  ) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n    this.subscriptions.push(\n      this.fsAPI.onChangeFullscreen.subscribe(\n        this.onChangeFullscreen.bind(this)\n      )\n    );\n    this.subscriptions.push(\n      this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this))\n    );\n    this.subscriptions.push(\n      this.target.subscriptions.bufferDetected.subscribe((isBuffering) =>\n        this.onUpdateBuffer(isBuffering)\n      )\n    );\n  }\n\n  onUpdateBuffer(isBuffering) {\n    this.isBuffering = isBuffering;\n  }\n\n  onChangeFullscreen(fsState: boolean) {\n    if (this.fsAPI.nativeFullscreen) {\n      this.isNativeFullscreen = fsState;\n    }\n  }\n\n  onHideControls(hidden: boolean) {\n    if (this.vgSkipIfControlsHidden && this.areControlsHidden != hidden) {\n      this.areControlsHiddenChangeTime = Date.now();\n    }\n    this.areControlsHidden = hidden;\n\n  }\n\n  @HostListener('click')\n  onClick() {\n    if (this.vgSkipIfControlsHidden && (this.areControlsHidden || (Date.now() - this.areControlsHiddenChangeTime) < this.vgSkipIfControlsHiddenDelay * 1000)) {\n      return;\n    }\n\n    const state = this.getState();\n\n    switch (state) {\n      case VgStates.VG_PLAYING:\n        this.target.pause();\n        break;\n\n      case VgStates.VG_PAUSED:\n      case VgStates.VG_ENDED:\n        this.target.play();\n        break;\n    }\n  }\n\n  getState() {\n    let state = VgStates.VG_PAUSED;\n\n    if (this.target) {\n      if (this.target.state instanceof Array) {\n        for (let i = 0, l = this.target.state.length; i < l; i++) {\n          if (this.target.state[i] === VgStates.VG_PLAYING) {\n            state = VgStates.VG_PLAYING;\n            break;\n          }\n        }\n      } else {\n        state = this.target.state;\n      }\n    }\n\n    return state;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VgOverlayPlayComponent } from './vg-overlay-play.component';\nimport { VgCoreModule } from '@videogular/ngx-videogular/core';\n\n@NgModule({\n  imports: [CommonModule, VgCoreModule],\n  declarations: [VgOverlayPlayComponent],\n  exports: [VgOverlayPlayComponent],\n})\nexport class VgOverlayPlayModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}